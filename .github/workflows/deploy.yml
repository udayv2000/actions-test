name: Deploy MES Application

on:
  push:
    tags:
      - 'dev-v*'
      - 'main-v*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract branch from tag
      id: extract_branch
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        if [[ "$TAG_NAME" == dev-v* ]]; then
          echo "branch=dev" >> $GITHUB_OUTPUT
        elif [[ "$TAG_NAME" == main-v* ]]; then
          echo "branch=main" >> $GITHUB_OUTPUT
        else
          echo "Invalid tag format: $TAG_NAME"
          exit 1
        fi

    - name: Set environment variables based on branch
      run: |
        if [ "${{ steps.extract_branch.outputs.branch }}" = "main" ]; then
          echo "SSH_HOST=${{ secrets.SSH_HOST_AXXONET_MAIN }}" >> $GITHUB_ENV
          echo "SSH_USER=${{ secrets.SSH_USERNAME_AXXONET_MAIN }}" >> $GITHUB_ENV
          echo "DEPLOY_PATH=/home/ubuntu/test" >> $GITHUB_ENV
          echo "SSH_KEY_SECRET=SSH_PRIVATE_KEY_AXXONET_MAIN" >> $GITHUB_ENV
        elif [ "${{ steps.extract_branch.outputs.branch }}" = "dev" ]; then
          echo "SSH_HOST=${{ secrets.SSH_HOST_AXXONET_DEV }}" >> $GITHUB_ENV
          echo "SSH_USER=${{ secrets.SSH_USERNAME_AXXONET_DEV }}" >> $GITHUB_ENV
          echo "DEPLOY_PATH=/home/axxonet/test" >> $GITHUB_ENV
          echo "SSH_KEY_SECRET=SSH_PRIVATE_KEY_AXXONET_DEV" >> $GITHUB_ENV
        fi

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets[env.SSH_KEY_SECRET] }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

    - name: Deploy to server
      run: |
        ssh ${SSH_USER}@${SSH_HOST} << EOF
          cd ${DEPLOY_PATH}
          git fetch --all
          git checkout ${{ steps.extract_branch.outputs.branch }}
          git pull origin ${{ steps.extract_branch.outputs.branch }}
          cat README.md
        EOF
  run-tests:
    name: Run Playwright Demo Test
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        working-directory: e2e/ai_insights
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -e .
          playwright install

      - name: Run specific Playwright test
        working-directory: e2e/ai_insights
        run: |
          source venv/bin/activate
          pytest tests/test_login_TC_003_Verify_Login_page_links.py \
                 --maxfail=1 --disable-warnings -q \
                 --html=tests/report.html \
                 --self-contained-html \
                 --trace=on

      - name: Upload test results and traces
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: |
            e2e/ai_insights/tests/report.html
            e2e/ai_insights/test-results/



        
